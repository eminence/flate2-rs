var N = null;var searchIndex = {};
searchIndex["flate2"]={"doc":"A DEFLATE-based stream compression/decompression library","items":[[3,"GzBuilder","flate2","A builder structure to create a new gzip Encoder.",N,N],[3,"GzHeader","","A structure representing the header of a gzip stream.",N,N],[3,"Compress","","Raw in-memory compression stream for blocks of data.",N,N],[3,"CompressError","","Error returned when a compression object is used incorrectly or otherwise generates an error.",N,N],[3,"Decompress","","Raw in-memory decompression stream for blocks of data.",N,N],[3,"DecompressError","","Error returned when a decompression object finds that the input stream of bytes was not a valid input stream of bytes.",N,N],[3,"Crc","","The CRC calculated by a [`CrcReader`].",N,N],[3,"CrcReader","","A wrapper around a [`Read`] that calculates the CRC.",N,N],[3,"CrcWriter","","A wrapper around a [`Write`] that calculates the CRC.",N,N],[3,"Compression","","When compressing data, the compression level can be specified by a value in this enum.",N,N],[4,"Status","","Possible status results of compressing some data or successfully decompressing a block of data.",N,N],[13,"Ok","","Indicates success.",0,N],[13,"BufError","","Indicates that forward progress is not possible due to input or output buffers being empty.",0,N],[13,"StreamEnd","","Indicates that all input has been consumed and all output bytes have been written. Decompression/compression should not be called again.",0,N],[4,"FlushCompress","","Values which indicate the form of flushing to be used when compressing in-memory data.",N,N],[13,"None","","A typical parameter for passing to compression/decompression functions, this indicates that the underlying stream to decide how much data to accumulate before producing output in order to maximize compression.",1,N],[13,"Sync","","All pending output is flushed to the output buffer and the output is aligned on a byte boundary so that the decompressor can get all input data available so far.",1,N],[13,"Partial","","All pending output is flushed to the output buffer, but the output is not aligned to a byte boundary.",1,N],[13,"Full","","All output is flushed as with `Flush::Sync` and the compression state is reset so decompression can restart from this point if previous compressed data has been damaged or if random access is desired.",1,N],[13,"Finish","","Pending input is processed and pending output is flushed.",1,N],[4,"FlushDecompress","","Values which indicate the form of flushing to be used when decompressing in-memory data.",N,N],[13,"None","","A typical parameter for passing to compression/decompression functions, this indicates that the underlying stream to decide how much data to accumulate before producing output in order to maximize compression.",2,N],[13,"Sync","","All pending output is flushed to the output buffer and the output is aligned on a byte boundary so that the decompressor can get all input data available so far.",2,N],[13,"Finish","","Pending input is processed and pending output is flushed.",2,N],[11,"fmt","","",3,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",4,[[["self"],["formatter"]],["result"]]],[11,"new","","Create a new CRC.",3,[[],["crc"]]],[11,"sum","","bla",3,[[["self"]],["u32"]]],[11,"amount","","The number of bytes that have been used to calculate the CRC. This value is only accurate if the amount is lower than 232.",3,[[["self"]],["u32"]]],[11,"update","","Update the CRC with the bytes in `data`.",3,N],[11,"reset","","Reset the CRC.",3,[[["self"]]]],[11,"combine","","Combine the CRC with the CRC for the subsequent block of bytes.",3,[[["self"],["crc"]]]],[11,"new","","Create a new CrcReader.",4,[[["r"]],["crcreader"]]],[11,"crc","","Get the Crc for this CrcReader.",4,[[["self"]],["crc"]]],[11,"into_inner","","Get the reader that is wrapped by this CrcReader.",4,[[["self"]],["r"]]],[11,"get_ref","","Get the reader that is wrapped by this CrcReader by reference.",4,[[["self"]],["r"]]],[11,"get_mut","","Get a mutable reference to the reader that is wrapped by this CrcReader.",4,[[["self"]],["r"]]],[11,"reset","","Reset the Crc in this CrcReader.",4,[[["self"]]]],[11,"read","","",4,N],[11,"fill_buf","","",4,[[["self"]],["result"]]],[11,"consume","","",4,[[["self"],["usize"]]]],[11,"fmt","","",5,[[["self"],["formatter"]],["result"]]],[11,"crc","","Get the Crc for this CrcWriter.",5,[[["self"]],["crc"]]],[11,"into_inner","","Get the writer that is wrapped by this CrcWriter.",5,[[["self"]],["w"]]],[11,"get_ref","","Get the writer that is wrapped by this CrcWriter by reference.",5,[[["self"]],["w"]]],[11,"get_mut","","Get a mutable reference to the writer that is wrapped by this CrcWriter.",5,[[["self"]],["w"]]],[11,"reset","","Reset the Crc in this CrcWriter.",5,[[["self"]]]],[11,"new","","Create a new CrcWriter.",5,[[["w"]],["crcwriter"]]],[11,"write","","",5,N],[11,"flush","","",5,[[["self"]],["result"]]],[11,"eq","","",6,[[["self"],["gzheader"]],["bool"]]],[11,"ne","","",6,[[["self"],["gzheader"]],["bool"]]],[11,"clone","","",6,[[["self"]],["gzheader"]]],[11,"fmt","","",6,[[["self"],["formatter"]],["result"]]],[11,"filename","","Returns the `filename` field of this gzip stream's header, if present.",6,[[["self"]],["option"]]],[11,"extra","","Returns the `extra` field of this gzip stream's header, if present.",6,[[["self"]],["option"]]],[11,"comment","","Returns the `comment` field of this gzip stream's header, if present.",6,[[["self"]],["option"]]],[11,"operating_system","","Returns the `operating_system` field of this gzip stream's header.",6,[[["self"]],["u8"]]],[11,"mtime","","This gives the most recent modification time of the original file being compressed.",6,[[["self"]],["u32"]]],[11,"mtime_as_datetime","","Returns the most recent modification time represented by a date-time type. Returns `None` if the value of the underlying counter is 0, indicating no time stamp is available.",6,[[["self"]],["option",["systemtime"]]]],[11,"fmt","","",7,[[["self"],["formatter"]],["result"]]],[11,"new","","Create a new blank builder with no header by default.",7,[[],["gzbuilder"]]],[11,"mtime","","Configure the `mtime` field in the gzip header.",7,[[["self"],["u32"]],["gzbuilder"]]],[11,"operating_system","","Configure the `operating_system` field in the gzip header.",7,[[["self"],["u8"]],["gzbuilder"]]],[11,"extra","","Configure the `extra` field in the gzip header.",7,[[["self"],["t"]],["gzbuilder"]]],[11,"filename","","Configure the `filename` field in the gzip header.",7,[[["self"],["t"]],["gzbuilder"]]],[11,"comment","","Configure the `comment` field in the gzip header.",7,[[["self"],["t"]],["gzbuilder"]]],[11,"write","","Consume this builder, creating a writer encoder in the process.",7,[[["self"],["w"],["compression"]],["gzencoder"]]],[11,"read","","Consume this builder, creating a reader encoder in the process.",7,[[["self"],["r"],["compression"]],["gzencoder"]]],[11,"buf_read","","Consume this builder, creating a reader encoder in the process.",7,[[["self"],["r"],["compression"]],["gzencoder"]]],[11,"fmt","","",8,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",9,[[["self"],["formatter"]],["result"]]],[11,"clone","","",1,[[["self"]],["flushcompress"]]],[11,"eq","","",1,[[["self"],["flushcompress"]],["bool"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"clone","","",2,[[["self"]],["flushdecompress"]]],[11,"eq","","",2,[[["self"],["flushdecompress"]],["bool"]]],[11,"fmt","","",2,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",10,[[["self"],["formatter"]],["result"]]],[11,"needs_dictionary","","Indicates whether decompression failed due to requiring a dictionary.",10,[[["self"]],["option",["u32"]]]],[11,"fmt","","",11,[[["self"],["formatter"]],["result"]]],[11,"clone","","",0,[[["self"]],["status"]]],[11,"eq","","",0,[[["self"],["status"]],["bool"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"new","","Creates a new object ready for compressing data that it's given.",8,[[["compression"],["bool"]],["compress"]]],[11,"total_in","","Returns the total number of input bytes which have been processed by this compression object.",8,[[["self"]],["u64"]]],[11,"total_out","","Returns the total number of output bytes which have been produced by this compression object.",8,[[["self"]],["u64"]]],[11,"set_dictionary","","Specifies the compression dictionary to use.",8,N],[11,"reset","","Quickly resets this compressor without having to reallocate anything.",8,[[["self"]]]],[11,"set_level","","Dynamically updates the compression level.",8,[[["self"],["compression"]],["result",["compresserror"]]]],[11,"compress","","Compresses the input data into the output, consuming only as much input as needed and writing as much output as possible.",8,N],[11,"compress_vec","","Compresses the input data into the extra space of the output, consuming only as much input as needed and writing as much output as possible.",8,N],[11,"new","","Creates a new object ready for decompressing data that it's given.",9,[[["bool"]],["decompress"]]],[11,"total_in","","Returns the total number of input bytes which have been processed by this decompression object.",9,[[["self"]],["u64"]]],[11,"total_out","","Returns the total number of output bytes which have been produced by this decompression object.",9,[[["self"]],["u64"]]],[11,"decompress","","Decompresses the input data into the output, consuming only as much input as needed and writing as much output as possible.",9,N],[11,"decompress_vec","","Decompresses the input data into the extra space in the output vector specified by `output`.",9,N],[11,"set_dictionary","","Specifies the decompression dictionary to use.",9,N],[11,"reset","","Performs the equivalent of replacing this decompression state with a freshly allocated copy.",9,[[["self"],["bool"]]]],[11,"description","","",10,[[["self"]],["str"]]],[11,"fmt","","",10,[[["self"],["formatter"]],["result"]]],[11,"description","","",11,[[["self"]],["str"]]],[11,"fmt","","",11,[[["self"],["formatter"]],["result"]]],[0,"read","","Types which operate over [`Read`] streams, both encoders and decoders for various formats.",N,N],[3,"DeflateEncoder","flate2::read","A DEFLATE encoder, or compressor.",N,N],[3,"DeflateDecoder","","A DEFLATE decoder, or decompressor.",N,N],[3,"ZlibEncoder","","A ZLIB encoder, or compressor.",N,N],[3,"ZlibDecoder","","A ZLIB decoder, or decompressor.",N,N],[3,"GzEncoder","","A gzip streaming encoder",N,N],[3,"GzDecoder","","A gzip streaming decoder",N,N],[3,"MultiGzDecoder","","A gzip streaming decoder that decodes all members of a multistream",N,N],[0,"write","flate2","Types which operate over [`Write`] streams, both encoders and decoders for various formats.",N,N],[3,"DeflateEncoder","flate2::write","A DEFLATE encoder, or compressor.",N,N],[3,"DeflateDecoder","","A DEFLATE decoder, or decompressor.",N,N],[3,"ZlibEncoder","","A ZLIB encoder, or compressor.",N,N],[3,"ZlibDecoder","","A ZLIB decoder, or decompressor.",N,N],[3,"GzEncoder","","A gzip streaming encoder",N,N],[3,"GzDecoder","","A gzip streaming decoder",N,N],[0,"bufread","flate2","Types which operate over [`BufRead`] streams, both encoders and decoders for various formats.",N,N],[3,"DeflateEncoder","flate2::bufread","A DEFLATE encoder, or compressor.",N,N],[3,"DeflateDecoder","","A DEFLATE decoder, or decompressor.",N,N],[3,"ZlibEncoder","","A ZLIB encoder, or compressor.",N,N],[3,"ZlibDecoder","","A ZLIB decoder, or decompressor.",N,N],[3,"GzEncoder","","A gzip streaming encoder",N,N],[3,"GzDecoder","","A gzip streaming decoder",N,N],[3,"MultiGzDecoder","","A gzip streaming decoder that decodes all members of a multistream",N,N],[11,"clone","flate2","",12,[[["self"]],["compression"]]],[11,"eq","","",12,[[["self"],["compression"]],["bool"]]],[11,"ne","","",12,[[["self"],["compression"]],["bool"]]],[11,"fmt","","",12,[[["self"],["formatter"]],["result"]]],[11,"new","","Creates a new description of the compression level with an explicitly specified integer.",12,[[["u32"]],["compression"]]],[11,"none","","No compression is to be performed, this may actually inflate data slightly when encoding.",12,[[],["compression"]]],[11,"fast","","Optimize for the best speed of encoding.",12,[[],["compression"]]],[11,"best","","Optimize for the size of data being encoded.",12,[[],["compression"]]],[11,"level","","Returns an integer representing the compression level, typically on a scale of 0-9",12,[[["self"]],["u32"]]],[11,"default","","",12,[[],["compression"]]],[11,"to_owned","","",12,[[["self"]],["t"]]],[11,"clone_into","","",12,N],[11,"from","","",12,[[["t"]],["t"]]],[11,"into","","",12,[[["self"]],["u"]]],[11,"try_from","","",12,[[["u"]],["result"]]],[11,"borrow","","",12,[[["self"]],["t"]]],[11,"try_into","","",12,[[["self"]],["result"]]],[11,"borrow_mut","","",12,[[["self"]],["t"]]],[11,"get_type_id","","",12,[[["self"]],["typeid"]]],[11,"fmt","flate2::bufread","",13,[[["self"],["formatter"]],["result"]]],[11,"new","","Creates a new encoder which will read uncompressed data from the given stream and emit the compressed stream.",13,[[["r"],["compression"]],["deflateencoder"]]],[11,"reset","","Resets the state of this encoder entirely, swapping out the input stream for another.",13,[[["self"],["r"]],["r"]]],[11,"get_ref","","Acquires a reference to the underlying reader",13,[[["self"]],["r"]]],[11,"get_mut","","Acquires a mutable reference to the underlying stream",13,[[["self"]],["r"]]],[11,"into_inner","","Consumes this encoder, returning the underlying reader.",13,[[["self"]],["r"]]],[11,"total_in","","Returns the number of bytes that have been read into this compressor.",13,[[["self"]],["u64"]]],[11,"total_out","","Returns the number of bytes that the compressor has produced.",13,[[["self"]],["u64"]]],[11,"read","","",13,N],[11,"write","","",13,N],[11,"flush","","",13,[[["self"]],["result"]]],[11,"shutdown","","",13,[[["self"]],["poll",["error"]]]],[11,"fmt","","",14,[[["self"],["formatter"]],["result"]]],[11,"new","","Creates a new decoder which will decompress data read from the given stream.",14,[[["r"]],["deflatedecoder"]]],[11,"reset","","Resets the state of this decoder entirely, swapping out the input stream for another.",14,[[["self"],["r"]],["r"]]],[11,"reset_data","","Resets the state of this decoder's data",14,[[["self"]]]],[11,"get_ref","","Acquires a reference to the underlying stream",14,[[["self"]],["r"]]],[11,"get_mut","","Acquires a mutable reference to the underlying stream",14,[[["self"]],["r"]]],[11,"into_inner","","Consumes this decoder, returning the underlying reader.",14,[[["self"]],["r"]]],[11,"total_in","","Returns the number of bytes that the decompressor has consumed.",14,[[["self"]],["u64"]]],[11,"total_out","","Returns the number of bytes that the decompressor has produced.",14,[[["self"]],["u64"]]],[11,"read","","",14,N],[11,"write","","",14,N],[11,"flush","","",14,[[["self"]],["result"]]],[11,"shutdown","","",14,[[["self"]],["poll",["error"]]]],[11,"fmt","flate2::read","",15,[[["self"],["formatter"]],["result"]]],[11,"new","","Creates a new encoder which will read uncompressed data from the given stream and emit the compressed stream.",15,[[["r"],["compression"]],["deflateencoder"]]],[11,"reset","","Resets the state of this encoder entirely, swapping out the input stream for another.",15,[[["self"],["r"]],["r"]]],[11,"get_ref","","Acquires a reference to the underlying reader",15,[[["self"]],["r"]]],[11,"get_mut","","Acquires a mutable reference to the underlying stream",15,[[["self"]],["r"]]],[11,"into_inner","","Consumes this encoder, returning the underlying reader.",15,[[["self"]],["r"]]],[11,"total_in","","Returns the number of bytes that have been read into this compressor.",15,[[["self"]],["u64"]]],[11,"total_out","","Returns the number of bytes that the compressor has produced.",15,[[["self"]],["u64"]]],[11,"read","","",15,N],[11,"write","","",15,N],[11,"flush","","",15,[[["self"]],["result"]]],[11,"shutdown","","",15,[[["self"]],["poll",["error"]]]],[11,"fmt","","",16,[[["self"],["formatter"]],["result"]]],[11,"new","","Creates a new decoder which will decompress data read from the given stream.",16,[[["r"]],["deflatedecoder"]]],[11,"new_with_buf","","Same as `new`, but the intermediate buffer for data is specified.",16,[[["r"],["vec",["u8"]]],["deflatedecoder"]]],[11,"reset","","Resets the state of this decoder entirely, swapping out the input stream for another.",16,[[["self"],["r"]],["r"]]],[11,"get_ref","","Acquires a reference to the underlying stream",16,[[["self"]],["r"]]],[11,"get_mut","","Acquires a mutable reference to the underlying stream",16,[[["self"]],["r"]]],[11,"into_inner","","Consumes this decoder, returning the underlying reader.",16,[[["self"]],["r"]]],[11,"total_in","","Returns the number of bytes that the decompressor has consumed.",16,[[["self"]],["u64"]]],[11,"total_out","","Returns the number of bytes that the decompressor has produced.",16,[[["self"]],["u64"]]],[11,"read","","",16,N],[11,"write","","",16,N],[11,"flush","","",16,[[["self"]],["result"]]],[11,"shutdown","","",16,[[["self"]],["poll",["error"]]]],[11,"fmt","flate2::write","",17,[[["self"],["formatter"]],["result"]]],[11,"new","","Creates a new encoder which will write compressed data to the stream given at the given compression level.",17,[[["w"],["compression"]],["deflateencoder"]]],[11,"get_ref","","Acquires a reference to the underlying writer.",17,[[["self"]],["w"]]],[11,"get_mut","","Acquires a mutable reference to the underlying writer.",17,[[["self"]],["w"]]],[11,"reset","","Resets the state of this encoder entirely, swapping out the output stream for another.",17,[[["self"],["w"]],["result"]]],[11,"try_finish","","Attempt to finish this output stream, writing out final chunks of data.",17,[[["self"]],["result"]]],[11,"finish","","Consumes this encoder, flushing the output stream.",17,[[["self"]],["result"]]],[11,"flush_finish","","Consumes this encoder, flushing the output stream.",17,[[["self"]],["result"]]],[11,"total_in","","Returns the number of bytes that have been written to this compresor.",17,[[["self"]],["u64"]]],[11,"total_out","","Returns the number of bytes that the compressor has produced.",17,[[["self"]],["u64"]]],[11,"write","","",17,N],[11,"flush","","",17,[[["self"]],["result"]]],[11,"shutdown","","",17,[[["self"]],["poll",["error"]]]],[11,"read","","",17,N],[11,"fmt","","",18,[[["self"],["formatter"]],["result"]]],[11,"new","","Creates a new decoder which will write uncompressed data to the stream.",18,[[["w"]],["deflatedecoder"]]],[11,"get_ref","","Acquires a reference to the underlying writer.",18,[[["self"]],["w"]]],[11,"get_mut","","Acquires a mutable reference to the underlying writer.",18,[[["self"]],["w"]]],[11,"reset","","Resets the state of this decoder entirely, swapping out the output stream for another.",18,[[["self"],["w"]],["result"]]],[11,"try_finish","","Attempt to finish this output stream, writing out final chunks of data.",18,[[["self"]],["result"]]],[11,"finish","","Consumes this encoder, flushing the output stream.",18,[[["self"]],["result"]]],[11,"total_in","","Returns the number of bytes that the decompressor has consumed for decompression.",18,[[["self"]],["u64"]]],[11,"total_out","","Returns the number of bytes that the decompressor has written to its output stream.",18,[[["self"]],["u64"]]],[11,"write","","",18,N],[11,"flush","","",18,[[["self"]],["result"]]],[11,"shutdown","","",18,[[["self"]],["poll",["error"]]]],[11,"read","","",18,N],[11,"fmt","flate2::bufread","",19,[[["self"],["formatter"]],["result"]]],[11,"new","","Creates a new encoder which will use the given compression level.",19,[[["r"],["compression"]],["gzencoder"]]],[11,"get_ref","","Acquires a reference to the underlying reader.",19,[[["self"]],["r"]]],[11,"get_mut","","Acquires a mutable reference to the underlying reader.",19,[[["self"]],["r"]]],[11,"into_inner","","Returns the underlying stream, consuming this encoder",19,[[["self"]],["r"]]],[11,"read","","",19,N],[11,"write","","",19,N],[11,"flush","","",19,[[["self"]],["result"]]],[11,"fmt","","",20,[[["self"],["formatter"]],["result"]]],[11,"new","","Creates a new decoder from the given reader, immediately parsing the gzip header.",20,[[["r"]],["gzdecoder"]]],[11,"header","","Returns the header associated with this stream, if it was valid",20,[[["self"]],["option",["gzheader"]]]],[11,"get_ref","","Acquires a reference to the underlying reader.",20,[[["self"]],["r"]]],[11,"get_mut","","Acquires a mutable reference to the underlying stream.",20,[[["self"]],["r"]]],[11,"into_inner","","Consumes this decoder, returning the underlying reader.",20,[[["self"]],["r"]]],[11,"read","","",20,N],[11,"write","","",20,N],[11,"flush","","",20,[[["self"]],["result"]]],[11,"fmt","","",21,[[["self"],["formatter"]],["result"]]],[11,"new","","Creates a new decoder from the given reader, immediately parsing the (first) gzip header. If the gzip stream contains multiple members all will be decoded.",21,[[["r"]],["multigzdecoder"]]],[11,"header","","Returns the current header associated with this stream, if it's valid",21,[[["self"]],["option",["gzheader"]]]],[11,"get_ref","","Acquires a reference to the underlying reader.",21,[[["self"]],["r"]]],[11,"get_mut","","Acquires a mutable reference to the underlying stream.",21,[[["self"]],["r"]]],[11,"into_inner","","Consumes this decoder, returning the underlying reader.",21,[[["self"]],["r"]]],[11,"read","","",21,N],[11,"write","","",21,N],[11,"flush","","",21,[[["self"]],["result"]]],[11,"fmt","flate2::read","",22,[[["self"],["formatter"]],["result"]]],[11,"new","","Creates a new encoder which will use the given compression level.",22,[[["r"],["compression"]],["gzencoder"]]],[11,"get_ref","","Acquires a reference to the underlying reader.",22,[[["self"]],["r"]]],[11,"get_mut","","Acquires a mutable reference to the underlying reader.",22,[[["self"]],["r"]]],[11,"into_inner","","Returns the underlying stream, consuming this encoder",22,[[["self"]],["r"]]],[11,"read","","",22,N],[11,"write","","",22,N],[11,"flush","","",22,[[["self"]],["result"]]],[11,"fmt","","",23,[[["self"],["formatter"]],["result"]]],[11,"new","","Creates a new decoder from the given reader, immediately parsing the gzip header.",23,[[["r"]],["gzdecoder"]]],[11,"header","","Returns the header associated with this stream, if it was valid.",23,[[["self"]],["option",["gzheader"]]]],[11,"get_ref","","Acquires a reference to the underlying reader.",23,[[["self"]],["r"]]],[11,"get_mut","","Acquires a mutable reference to the underlying stream.",23,[[["self"]],["r"]]],[11,"into_inner","","Consumes this decoder, returning the underlying reader.",23,[[["self"]],["r"]]],[11,"read","","",23,N],[11,"write","","",23,N],[11,"flush","","",23,[[["self"]],["result"]]],[11,"fmt","","",24,[[["self"],["formatter"]],["result"]]],[11,"new","","Creates a new decoder from the given reader, immediately parsing the (first) gzip header. If the gzip stream contains multiple members all will be decoded.",24,[[["r"]],["multigzdecoder"]]],[11,"header","","Returns the current header associated with this stream, if it's valid.",24,[[["self"]],["option",["gzheader"]]]],[11,"get_ref","","Acquires a reference to the underlying reader.",24,[[["self"]],["r"]]],[11,"get_mut","","Acquires a mutable reference to the underlying stream.",24,[[["self"]],["r"]]],[11,"into_inner","","Consumes this decoder, returning the underlying reader.",24,[[["self"]],["r"]]],[11,"read","","",24,N],[11,"write","","",24,N],[11,"flush","","",24,[[["self"]],["result"]]],[11,"fmt","flate2::write","",25,[[["self"],["formatter"]],["result"]]],[11,"new","","Creates a new encoder which will use the given compression level.",25,[[["w"],["compression"]],["gzencoder"]]],[11,"get_ref","","Acquires a reference to the underlying writer.",25,[[["self"]],["w"]]],[11,"get_mut","","Acquires a mutable reference to the underlying writer.",25,[[["self"]],["w"]]],[11,"try_finish","","Attempt to finish this output stream, writing out final chunks of data.",25,[[["self"]],["result"]]],[11,"finish","","Finish encoding this stream, returning the underlying writer once the encoding is done.",25,[[["self"]],["result"]]],[11,"write","","",25,N],[11,"flush","","",25,[[["self"]],["result"]]],[11,"shutdown","","",25,[[["self"]],["poll",["error"]]]],[11,"read","","",25,N],[11,"drop","","",25,[[["self"]]]],[11,"fmt","","",26,[[["self"],["formatter"]],["result"]]],[11,"new","","Creates a new decoder which will write uncompressed data to the stream.",26,[[["w"]],["gzdecoder"]]],[11,"header","","Returns the header associated with this stream.",26,[[["self"]],["option",["gzheader"]]]],[11,"get_ref","","Acquires a reference to the underlying writer.",26,[[["self"]],["w"]]],[11,"get_mut","","Acquires a mutable reference to the underlying writer.",26,[[["self"]],["w"]]],[11,"try_finish","","Attempt to finish this output stream, writing out final chunks of data.",26,[[["self"]],["result"]]],[11,"finish","","Consumes this decoder, flushing the output stream.",26,[[["self"]],["result"]]],[11,"write","","",26,N],[11,"flush","","",26,[[["self"]],["result"]]],[11,"shutdown","","",26,[[["self"]],["poll",["error"]]]],[11,"read","","",26,N],[11,"fmt","flate2::bufread","",27,[[["self"],["formatter"]],["result"]]],[11,"new","","Creates a new encoder which will read uncompressed data from the given stream and emit the compressed stream.",27,[[["r"],["compression"]],["zlibencoder"]]],[11,"reset","","Resets the state of this encoder entirely, swapping out the input stream for another.",27,[[["self"],["r"]],["r"]]],[11,"get_ref","","Acquires a reference to the underlying reader",27,[[["self"]],["r"]]],[11,"get_mut","","Acquires a mutable reference to the underlying stream",27,[[["self"]],["r"]]],[11,"into_inner","","Consumes this encoder, returning the underlying reader.",27,[[["self"]],["r"]]],[11,"total_in","","Returns the number of bytes that have been read into this compressor.",27,[[["self"]],["u64"]]],[11,"total_out","","Returns the number of bytes that the compressor has produced.",27,[[["self"]],["u64"]]],[11,"read","","",27,N],[11,"write","","",27,N],[11,"flush","","",27,[[["self"]],["result"]]],[11,"shutdown","","",27,[[["self"]],["poll",["error"]]]],[11,"fmt","","",28,[[["self"],["formatter"]],["result"]]],[11,"new","","Creates a new decoder which will decompress data read from the given stream.",28,[[["r"]],["zlibdecoder"]]],[11,"reset","","Resets the state of this decoder entirely, swapping out the input stream for another.",28,[[["self"],["r"]],["r"]]],[11,"get_ref","","Acquires a reference to the underlying stream",28,[[["self"]],["r"]]],[11,"get_mut","","Acquires a mutable reference to the underlying stream",28,[[["self"]],["r"]]],[11,"into_inner","","Consumes this decoder, returning the underlying reader.",28,[[["self"]],["r"]]],[11,"total_in","","Returns the number of bytes that the decompressor has consumed.",28,[[["self"]],["u64"]]],[11,"total_out","","Returns the number of bytes that the decompressor has produced.",28,[[["self"]],["u64"]]],[11,"read","","",28,N],[11,"write","","",28,N],[11,"flush","","",28,[[["self"]],["result"]]],[11,"shutdown","","",28,[[["self"]],["poll",["error"]]]],[11,"fmt","flate2::read","",29,[[["self"],["formatter"]],["result"]]],[11,"new","","Creates a new encoder which will read uncompressed data from the given stream and emit the compressed stream.",29,[[["r"],["compression"]],["zlibencoder"]]],[11,"reset","","Resets the state of this encoder entirely, swapping out the input stream for another.",29,[[["self"],["r"]],["r"]]],[11,"get_ref","","Acquires a reference to the underlying stream",29,[[["self"]],["r"]]],[11,"get_mut","","Acquires a mutable reference to the underlying stream",29,[[["self"]],["r"]]],[11,"into_inner","","Consumes this encoder, returning the underlying reader.",29,[[["self"]],["r"]]],[11,"total_in","","Returns the number of bytes that have been read into this compressor.",29,[[["self"]],["u64"]]],[11,"total_out","","Returns the number of bytes that the compressor has produced.",29,[[["self"]],["u64"]]],[11,"read","","",29,N],[11,"write","","",29,N],[11,"flush","","",29,[[["self"]],["result"]]],[11,"shutdown","","",29,[[["self"]],["poll",["error"]]]],[11,"fmt","","",30,[[["self"],["formatter"]],["result"]]],[11,"new","","Creates a new decoder which will decompress data read from the given stream.",30,[[["r"]],["zlibdecoder"]]],[11,"new_with_buf","","Same as `new`, but the intermediate buffer for data is specified.",30,[[["r"],["vec",["u8"]]],["zlibdecoder"]]],[11,"reset","","Resets the state of this decoder entirely, swapping out the input stream for another.",30,[[["self"],["r"]],["r"]]],[11,"get_ref","","Acquires a reference to the underlying stream",30,[[["self"]],["r"]]],[11,"get_mut","","Acquires a mutable reference to the underlying stream",30,[[["self"]],["r"]]],[11,"into_inner","","Consumes this decoder, returning the underlying reader.",30,[[["self"]],["r"]]],[11,"total_in","","Returns the number of bytes that the decompressor has consumed.",30,[[["self"]],["u64"]]],[11,"total_out","","Returns the number of bytes that the decompressor has produced.",30,[[["self"]],["u64"]]],[11,"read","","",30,N],[11,"write","","",30,N],[11,"flush","","",30,[[["self"]],["result"]]],[11,"shutdown","","",30,[[["self"]],["poll",["error"]]]],[11,"fmt","flate2::write","",31,[[["self"],["formatter"]],["result"]]],[11,"new","","Creates a new encoder which will write compressed data to the stream given at the given compression level.",31,[[["w"],["compression"]],["zlibencoder"]]],[11,"get_ref","","Acquires a reference to the underlying writer.",31,[[["self"]],["w"]]],[11,"get_mut","","Acquires a mutable reference to the underlying writer.",31,[[["self"]],["w"]]],[11,"reset","","Resets the state of this encoder entirely, swapping out the output stream for another.",31,[[["self"],["w"]],["result"]]],[11,"try_finish","","Attempt to finish this output stream, writing out final chunks of data.",31,[[["self"]],["result"]]],[11,"finish","","Consumes this encoder, flushing the output stream.",31,[[["self"]],["result"]]],[11,"flush_finish","","Consumes this encoder, flushing the output stream.",31,[[["self"]],["result"]]],[11,"total_in","","Returns the number of bytes that have been written to this compresor.",31,[[["self"]],["u64"]]],[11,"total_out","","Returns the number of bytes that the compressor has produced.",31,[[["self"]],["u64"]]],[11,"write","","",31,N],[11,"flush","","",31,[[["self"]],["result"]]],[11,"shutdown","","",31,[[["self"]],["poll",["error"]]]],[11,"read","","",31,N],[11,"fmt","","",32,[[["self"],["formatter"]],["result"]]],[11,"new","","Creates a new decoder which will write uncompressed data to the stream.",32,[[["w"]],["zlibdecoder"]]],[11,"get_ref","","Acquires a reference to the underlying writer.",32,[[["self"]],["w"]]],[11,"get_mut","","Acquires a mutable reference to the underlying writer.",32,[[["self"]],["w"]]],[11,"reset","","Resets the state of this decoder entirely, swapping out the output stream for another.",32,[[["self"],["w"]],["result"]]],[11,"try_finish","","Attempt to finish this output stream, writing out final chunks of data.",32,[[["self"]],["result"]]],[11,"finish","","Consumes this encoder, flushing the output stream.",32,[[["self"]],["result"]]],[11,"total_in","","Returns the number of bytes that the decompressor has consumed for decompression.",32,[[["self"]],["u64"]]],[11,"total_out","","Returns the number of bytes that the decompressor has written to its output stream.",32,[[["self"]],["u64"]]],[11,"write","","",32,N],[11,"flush","","",32,[[["self"]],["result"]]],[11,"shutdown","","",32,[[["self"]],["poll",["error"]]]],[11,"read","","",32,N]],"paths":[[4,"Status"],[4,"FlushCompress"],[4,"FlushDecompress"],[3,"Crc"],[3,"CrcReader"],[3,"CrcWriter"],[3,"GzHeader"],[3,"GzBuilder"],[3,"Compress"],[3,"Decompress"],[3,"DecompressError"],[3,"CompressError"],[3,"Compression"],[3,"DeflateEncoder"],[3,"DeflateDecoder"],[3,"DeflateEncoder"],[3,"DeflateDecoder"],[3,"DeflateEncoder"],[3,"DeflateDecoder"],[3,"GzEncoder"],[3,"GzDecoder"],[3,"MultiGzDecoder"],[3,"GzEncoder"],[3,"GzDecoder"],[3,"MultiGzDecoder"],[3,"GzEncoder"],[3,"GzDecoder"],[3,"ZlibEncoder"],[3,"ZlibDecoder"],[3,"ZlibEncoder"],[3,"ZlibDecoder"],[3,"ZlibEncoder"],[3,"ZlibDecoder"]]};
initSearch(searchIndex);
